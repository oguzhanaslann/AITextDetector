def wrap_in_quotes(text: str) -> str:
    """
    Wraps the given text in double quotes.
    
    Args:
        text (str): Text to be wrapped in quotes
        
    Returns:
        str: Text wrapped in double quotes
    """
    return f'"{text}"'


def get_dataset_percent(ds, percent):
    return ds[:int(len(ds) * percent)]

def get_dataset_percent_last(ds, percent):
    return ds[int(len(ds) * (1 - percent)):]

def preprocess_text(text):
    """
    Preprocesses text by cleaning, normalizing, and properly formatting it for CSV.
    
    Args:
        text (str): Raw text to be preprocessed
        
    Returns:
        str: Cleaned and properly formatted text
    """
    if not text:
        return '""'
    # Ensure proper quoting and escaping
    text = ensure_proper_quotes(text)
    
    return text

def getLabelText(label: int):
    int_label = int(label)
    return AI_LABEL if int_label == 1 else HUMAN_LABEL

def ensure_proper_quotes(text: str) -> str:
    """
    Ensures text is properly quoted and escapes existing quotes.
    
    Args:
        text (str): The text to be properly quoted
        
    Returns:
        str: Text with proper quote escaping and enclosure
    """
    # If the text is already properly quoted, return it as is
    if text.startswith('"') and text.endswith('"'):
        return text
        
    # Escape any existing double quotes with a single backslash
    text = text.replace('"', '\\"')
    
    # Wrap the text in double quotes
    return f'"{text}"'

AI_LABEL = "AI"
HUMAN_LABEL = "HUMAN"


def get_system_prompt():
    return """ You are an AI text classifier. For each example, determine whether the text was written by a human or generated by an AI. Respond in this format: Prediction(predictions=[{'classes': ['HUMAN', 'AI'], 'scores': [0.0, 1.0]}])
        Example 1: Text: "Artificial intelligence has revolutionized industries by automating complex tasks." Result: Prediction(predictions=[{'classes': ['HUMAN', 'AI'], 'scores': [0.0, 1.0]}])
        Example 2: Text: "Last night, I couldn't sleep â€” I kept thinking about that awkward conversation with my boss." Result: Prediction(predictions=[{'classes': ['HUMAN', 'AI'], 'scores': [1.0, 0.0]}])
    """